{
  "swagger": "2.0",
  "info": {
    "title": "Doctor Portfolio Builder",
    "description": "This is an api server for a doctor portfolio builder website.\n",
    "version": "1.0.0"
  },
  "host": "cse341-project2-0lcr.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/user/{username}": {
      "get": {
        "tags": ["user"],
        "summary": "Get a User",
        "description": "",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "username that need to be find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["user"],
        "summary": "Updated user",
        "description": "",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully modified user"
          },
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Error occurred"
          }
        }
      },
      "delete": {
        "tags": ["user"],
        "summary": "Delete User",
        "description": "",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted user"
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Error occurred"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["user"],
        "summary": "Get all users",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "Array",
              "$ref": "#/definitions/User"
            }
          },
          "500": {
            "description": "Error occurred"
          }
        }
      },
      "post": {
        "tags": ["user"],
        "summary": "Create user",
        "description": "This is for when a user creates an account",
        "operationId": "createUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Credentials"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "A User object",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/specialty/{specialtyName}": {
      "get": {
        "tags": ["specialty"],
        "summary": "Get a Specialty",
        "description": "",
        "operationId": "getSpecialty",
        "parameters": [
          {
            "name": "specialtyName",
            "in": "path",
            "description": "specialty name that need to be find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Specialty not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["specialty"],
        "summary": "Updated specialty",
        "description": "",
        "operationId": "updateSpecialty",
        "parameters": [
          {
            "name": "specialtyName",
            "in": "path",
            "description": "specialty name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Specialty"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully modified specialty"
          },
          "400": {
            "description": "Invalid specialtyName supplied"
          },
          "404": {
            "description": "Specialty not found"
          },
          "500": {
            "description": "Error occurred"
          }
        }
      },
      "delete": {
        "tags": ["specialty"],
        "summary": "Delete Specialty",
        "description": "",
        "operationId": "deleteSpecialty",
        "parameters": [
          {
            "name": "specialtyName",
            "in": "path",
            "description": "The specialty name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted specialty"
          },
          "400": {
            "description": "Invalid specialtyName supplied"
          },
          "404": {
            "description": "Specialty not found"
          },
          "500": {
            "description": "Error occurred"
          }
        }
      }
    },
    "/specialty": {
      "get": {
        "tags": ["specialty"],
        "summary": "Get all specialty",
        "operationId": "getAllSpecialties",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "Array",
              "$ref": "#/definitions/Specialty"
            }
          },
          "500": {
            "description": "Error occurred"
          }
        }
      },
      "post": {
        "tags": ["specialty"],
        "summary": "Create specialty",
        "description": "This is for when a user creates an specialty",
        "operationId": "createSpecialty",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Specialty"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "A User object",
            "schema": {
              "$ref": "#/definitions/Specialty"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": ["password", "username"],
      "properties": {
        "_id": {
          "type": "integer",
          "format": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "specialty": {
          "type": "string"
        },
        "profile": {
          "$ref": "#/definitions/User_profile"
        }
      }
    },
    "Specialty": {
      "type": "object",
      "required": ["colors", "fontFamily", "fontSize", "specialtyName"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "specialtyName": {
          "type": "string",
          "example": "Cardiology"
        },
        "fontSize": {
          "type": "integer",
          "example": 18
        },
        "fontFamily": {
          "type": "string",
          "example": "futura"
        },
        "inspiration": {
          "type": "string",
          "example": "https://www.example.com/"
        },
        "colors": {
          "type": "array",
          "example": ["#111", "#fff", "#F5F3EE", "#757575", "#7e7e7e"],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Credentials": {
      "type": "object",
      "required": ["password", "username"],
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "User_profile_experience": {
      "type": "object",
      "properties": {
        "jobTitle": {
          "type": "string"
        },
        "jobDescription": {
          "type": "string"
        },
        "dateStart": {
          "type": "string"
        },
        "dateEnd": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "User_profile_education": {
      "type": "object",
      "properties": {
        "institution": {
          "type": "string"
        },
        "programTitle": {
          "type": "string"
        },
        "programDescription": {
          "type": "string"
        },
        "dateStart": {
          "type": "string"
        },
        "dateEnd": {
          "type": "string"
        },
        "completed": {
          "type": "boolean"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "User_profile_references": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "relationship": {
          "type": "string"
        },
        "contactInfo": {
          "type": "string"
        },
        "yearsKnown": {
          "type": "integer",
          "format": "int32"
        },
        "knownFromWhere": {
          "type": "string"
        }
      }
    },
    "User_profile": {
      "type": "object",
      "properties": {
        "experience": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User_profile_experience"
          }
        },
        "education": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User_profile_education"
          }
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User_profile_references"
          }
        }
      }
    }
  }
}